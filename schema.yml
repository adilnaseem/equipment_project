openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/employees/:
    get:
      operationId: api_employees_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmployeeList'
          description: ''
    post:
      operationId: api_employees_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Employee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
  /api/employees/{id}/:
    get:
      operationId: api_employees_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    put:
      operationId: api_employees_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Employee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    patch:
      operationId: api_employees_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmployee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmployee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmployee'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    delete:
      operationId: api_employees_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/equipment/:
    get:
      operationId: api_equipment_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEquipmentList'
          description: ''
    post:
      operationId: api_equipment_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Equipment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Equipment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Equipment'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipment'
          description: ''
  /api/equipment/{id}/:
    get:
      operationId: api_equipment_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this equipment.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipment'
          description: ''
    put:
      operationId: api_equipment_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this equipment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Equipment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Equipment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Equipment'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipment'
          description: ''
    patch:
      operationId: api_equipment_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this equipment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEquipment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEquipment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEquipment'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipment'
          description: ''
    delete:
      operationId: api_equipment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this equipment.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    DepartmentEnum:
      enum:
      - hr
      - finance
      - engineering
      - marketing
      - sales
      type: string
      description: |-
        * `hr` - Human Resources
        * `finance` - Finance
        * `engineering` - Engineering
        * `marketing` - Marketing
        * `sales` - Sales
    Employee:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        department:
          $ref: '#/components/schemas/DepartmentEnum'
        salary:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - department
      - id
      - name
      - salary
      - user
    Equipment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        manufacturer:
          $ref: '#/components/schemas/ManufacturerEnum'
        made_in:
          type: string
          maxLength: 100
        serial_no:
          type: string
          maxLength: 200
        type:
          $ref: '#/components/schemas/TypeEnum'
        title:
          type: string
          maxLength: 200
        model:
          type: string
          maxLength: 500
        status:
          $ref: '#/components/schemas/StatusEnum'
        received_from:
          type: string
          maxLength: 200
        date_of_installation:
          type: string
          maxLength: 100
        description:
          type: string
        place_of_installation:
          type: integer
      required:
      - date_of_installation
      - id
      - made_in
      - manufacturer
      - model
      - place_of_installation
      - received_from
      - serial_no
      - status
      - title
      - type
    ManufacturerEnum:
      enum:
      - SD
      - RP
      - L3
      - AS
      type: string
      description: |-
        * `SD` - Smith Detection
        * `RP` - Rapiscan
        * `L3` - L3 Comm
        * `AS` - Astrophysics
    PaginatedEmployeeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
    PaginatedEquipmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Equipment'
    PatchedEmployee:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        department:
          $ref: '#/components/schemas/DepartmentEnum'
        salary:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
    PatchedEquipment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        manufacturer:
          $ref: '#/components/schemas/ManufacturerEnum'
        made_in:
          type: string
          maxLength: 100
        serial_no:
          type: string
          maxLength: 200
        type:
          $ref: '#/components/schemas/TypeEnum'
        title:
          type: string
          maxLength: 200
        model:
          type: string
          maxLength: 500
        status:
          $ref: '#/components/schemas/StatusEnum'
        received_from:
          type: string
          maxLength: 200
        date_of_installation:
          type: string
          maxLength: 100
        description:
          type: string
        place_of_installation:
          type: integer
    StatusEnum:
      enum:
      - I
      - R
      - F
      type: string
      description: |-
        * `I` - Installed
        * `R` - Reserve
        * `F` - Faulty
    TypeEnum:
      enum:
      - XR
      - XR2
      - KH
      - WT
      type: string
      description: |-
        * `XR` - Hand Baggage X-Ray Machine
        * `XR2` - Hold Baggage X-Ray Machine
        * `KH` - Khoji
        * `WT` - Walk Through Metal Detector Gate
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
